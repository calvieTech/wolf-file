// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SharedLink {
  id         String   @id @default(uuid())
  folderId   Int
  folder     Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  @@index([expiresAt])
}

model File {
  id         Int      @id @default(autoincrement())
  name       String
  size       Int      // Size in bytes
  uploadTime DateTime @default(now())
  url        String   // URL of the file in cloud storage
  folderId   Int
  folder     Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
}

model Folder {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  files     File[]
  sharedLinks SharedLink[]
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([sid], name: "session_sid_idx")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  sessions Session[]
  folders  Folder[]
}
